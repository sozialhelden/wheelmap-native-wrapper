
default_platform(:android)

manifestFile = './app/src/main/AndroidManifest.xml'
appNameStringsFile = './app/src/main/res/values/strings.xml'

platform :android do
  before_all do
    Dotenv.require_keys("PROJECT_ENV")

    project = ENV["PROJECT_ENV"]

    puts "PROJECT_ENV: #{project}"
    # path relative to Fastfile
    res = Dotenv.load("../../env/#{project}/Configuration")
    Dotenv.require_keys("PROJECT_ID")
  end

  private_lane :update_manifest do 
    # change both host entries
    xml_set_attribute(path_to_xml_file: manifestFile, xml_path: '//manifest//application//intent-filter//data[1][@android:scheme]', attribute_name: 'android:host', attribute_value: ENV["PROJECT_HOST_NAME"])
    xml_set_attribute(path_to_xml_file: manifestFile, xml_path: '//manifest//application//intent-filter//data[2][@android:scheme]', attribute_name: 'android:host', attribute_value: ENV["PROJECT_HOST_NAME"])

    xml_editor(path_to_xml_file: appNameStringsFile, xml_path: '//resources//string[@name=\'app_name\']', new_value: ENV["PROJECT_APP_NAME"])
  end

  private_lane :create_icon do
    project = ENV["PROJECT_ENV"]

    android_appicon(
      appicon_image_file: "../env/#{project}/AppIcon.png",
      appicon_icon_types: [:launcher],
      appicon_path: 'app/src/main/res/mipmap'
    )    
    android_appicon(
      appicon_image_file: "../env/#{project}/NotificationIcon.png",
      appicon_icon_types: [:notification],
      appicon_path: 'app/src/main/res/drawable',
      appicon_filename: 'ic_appbar'
    )
  end

  desc "Build the app"
  lane :development do
    create_icon()
    update_manifest()
    gradle(task: "clean assembleRelease")
  end
end
